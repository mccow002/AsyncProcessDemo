// <auto-generated />
using System;
using AsyncDemo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AsyncDemo.Data.Migrations
{
    [DbContext(typeof(AsyncDemoContext))]
    [Migration("20230712223744_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AsyncDemo.Domain.Domain.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("AsyncDemo.Domain.Domain.OrderLineItem", b =>
                {
                    b.Property<int>("OrderLineItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderLineItemId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderLineItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderLineItem");
                });

            modelBuilder.Entity("AsyncDemo.Domain.Domain.OrderLineItemRoute", b =>
                {
                    b.Property<int>("OrderLineItemRouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderLineItemRouteId"));

                    b.Property<int>("OrderLineItemId")
                        .HasColumnType("int");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SignOffDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderLineItemRouteId");

                    b.HasIndex("OrderLineItemId");

                    b.ToTable("OrderLineItemRoute");
                });

            modelBuilder.Entity("AsyncDemo.Domain.Domain.OrderLineItem", b =>
                {
                    b.HasOne("AsyncDemo.Domain.Domain.Order", "Order")
                        .WithMany("OrderLineItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("AsyncDemo.Domain.Domain.OrderLineItemRoute", b =>
                {
                    b.HasOne("AsyncDemo.Domain.Domain.OrderLineItem", "OrderLineItem")
                        .WithMany("Routes")
                        .HasForeignKey("OrderLineItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderLineItem");
                });

            modelBuilder.Entity("AsyncDemo.Domain.Domain.Order", b =>
                {
                    b.Navigation("OrderLineItems");
                });

            modelBuilder.Entity("AsyncDemo.Domain.Domain.OrderLineItem", b =>
                {
                    b.Navigation("Routes");
                });
#pragma warning restore 612, 618
        }
    }
}
